@using PartyTriviaShared.Services
@using PartyTriviaShared.Models
@inject OpenTriviaDbService OpenTriviaDbService
@using Syncfusion.Blazor.DropDowns

<div class="col-lg-12">
    <div class="col-lg-8 control-section sb-property-border">
        <div class="control-wrapper">
            <label class="category-label">Select a Category</label>
            <SfComboBox TValue="string" TItem="TriviaCategory" PopupHeight="230px" Placeholder="Select Category..." @bind-Value="@SelectedCategory" DataSource="@TriviaCategories">
                <ComboBoxEvents TValue="string" TItem="TriviaCategory" ValueChange="OnChange" />
                <ComboBoxFieldSettings Text="Name" Value="Id" />
            </SfComboBox>
        </div>
    </div>
</div>
<style>
    .control-section {
        min-height: 50px;
    }

    .control-wrapper {
        max-width: 250px;
        margin: 5px;
        padding: 0px 0px 0px;
    }

    .category-label {
        font-size: 14px;
        margin-bottom: 6px;
        font-weight: bold;
    }

    .property-panel-section .property-value {
        padding: 5px 0px 10px;
        font-size: 14px;
    }

    .property-panel-content {
        padding: 0px 0px 15px 0px;
    }

        .property-panel-content:last-child {
            padding: 0px 0px 40px 0px;
        }
</style>


@code {
    [Parameter]
    public EventCallback<string> CategorySelected { get; set; }

    private List<TriviaCategory> TriviaCategories { get; set; } = new();
    private string? SelectedCategory { get; set; }

    protected override async Task OnInitializedAsync()
    {
        TriviaCategory[]? newTriviaCategories = await OpenTriviaDbService.GetCategoriesAsync();
        if (newTriviaCategories != null)
        {
            TriviaCategories = newTriviaCategories.ToList();
        }
    }

    public void OnChange(ChangeEventArgs<string, TriviaCategory> args)
    {
        CategorySelected.InvokeAsync(args.ItemData?.Id ?? string.Empty);
    }
}
